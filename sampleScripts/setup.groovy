def remote = Remote.create();
remote.connect("virtualhost", 22, "user", "password");
remote.execute("mkdir forSendDirtest");
remote.execute("touch forSendDirtest/groovy.pacifista.txt");
def templateparameter = "replaced value";
def username = runtime.getEnv("USER");
def template = Template.create("testTemplate.vm");
template.put("parameter", templateparameter);
template.put("username", username);
template.put("lang", "groovy");
def config = template.toValue();
remote.send(config, "forSendDirtest", "groovyConfig");
def tester = Tester.create(remote);
tester.assertFile("/etc/hosts", "rw-r--r--", "root");
tester.assertPortOpen(22);
tester.assertCommand("hostname", "localhost.localdomain");
tester.assertFileHasLine("forSendDirtest/groovyConfig", "by lang[groovy]");
tester.assertFileIsFile("forSendDirtest/groovyConfig");
tester.assertFileIsDirectory("forSendDirtest");
tester.assertUserExists("user");
remote.close();
runtime.call("sampleScripts/otherScript.js");
console.log("groovy complete");