def remote = Remote.create();
remote.connect("virtualhost", 22, "user", "password");
//or remote.connectWithAuthFile("localhost", 28279, "vagrant", "/home/user/.ssh/pacifista");
remote.execute("mkdir forSendDirtest");
remote.execute("touch forSendDirtest/groovy.pacifista.txt");
def templateparameter = "replaced value";
def username = runtime.getEnv("USER");
def template = Template.createWithFile("testTemplate.vm");
template.put("parameter", templateparameter);
template.put("username", username);
template.put("lang", "groovy");
def config = template.toValue();
remote.send(config, "forSendDirtest", "groovyConfig");
def tester = Tester.create(remote);

remote = Remote.create();
remote.connect("virtualhost", 22, "user", "password");

tester.assertFile("/etc/hosts", "rw-r--r--", "root");
tester.assertPortOpen(22);
tester.assertCommand("hostname", "localhost.localdomain");
tester.assertFileHasLine("forSendDirtest/groovyConfig", "by lang[groovy]");
tester.assertFileIsFile("forSendDirtest/groovyConfig");
tester.assertFileIsDirectory("forSendDirtest");
tester.assertUserExists("user");
local.mkdir("data/test/localCreatedDir_groovy");
local.save("data/test/localCreatedDir_groovy/saved.txt", "this is\nPacifista!!");
local.copy("data/test/localCreatedDir_groovy/saved.txt", "data/test/localCreatedDir_groovy/copyed.txt");
tester.assertEquals("this is\nPacifista!!", local.load("data/test/localCreatedDir_groovy/saved.txt"));
local.remove("data/test/gitDir");
git.clone("https://github.com/ukiuni/pacifista.git", "data/test/gitDir");
local.remove("data/test");
remote.close();
runtime.call("sampleScripts/otherScript.js");
console.log("groovy complete");